<Activity mc:Ignorable="sap sap2010" x:Class="GetExcelData" this:GetExcelData.filePath="\\192.168.1.19\rpa测试数据\已标记好验收--增值税发票明细表2021副本all.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="filePath" Type="InArgument(x:String)" />
    <x:Property Name="dataTable" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="startDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="endDate" Type="InArgument(s:DateTime)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1043,802</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>NPOI.SS.Formula.Functions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetExcelData" sap:VirtualizedContainerService.HintSize="376,637" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="specificDt" />
      <Variable x:TypeArguments="sd:DataTable" Name="genericDt" />
      <Variable x:TypeArguments="sd:DataTable" Name="proformaDt" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="专票">
      <ui:ReadRange.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">specificDt</mca:CSharpReference>
        </OutArgument>
      </ui:ReadRange.DataTable>
      <ui:ReadRange.Range>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:ReadRange.Range>
      <ui:ReadRange.WorkbookPath>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">filePath</mca:CSharpValue>
        </InArgument>
      </ui:ReadRange.WorkbookPath>
    </ui:ReadRange>
    <ui:ReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="普票">
      <ui:ReadRange.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">genericDt</mca:CSharpReference>
        </OutArgument>
      </ui:ReadRange.DataTable>
      <ui:ReadRange.Range>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:ReadRange.Range>
      <ui:ReadRange.WorkbookPath>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">filePath</mca:CSharpValue>
        </InArgument>
      </ui:ReadRange.WorkbookPath>
    </ui:ReadRange>
    <ui:ReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="形式发票">
      <ui:ReadRange.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">proformaDt</mca:CSharpReference>
        </OutArgument>
      </ui:ReadRange.DataTable>
      <ui:ReadRange.Range>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:ReadRange.Range>
      <ui:ReadRange.WorkbookPath>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">filePath</mca:CSharpValue>
        </InArgument>
      </ui:ReadRange.WorkbookPath>
    </ui:ReadRange>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="dataTable = new DataTable();&#xA;dataTable.Columns.Add(&quot;公司名称&quot;,typeof(string));&#xA;dataTable.Columns.Add(&quot;开票金额&quot;,typeof(string));&#xA;dataTable.Columns.Add(&quot;到款金额&quot;,typeof(string));&#xA;dataTable.Columns.Add(&quot;折扣金额&quot;,typeof(string));&#xA;dataTable.Columns.Add(&quot;未到款金额&quot;,typeof(string));&#xA;dataTable.Columns.Add(&quot;PO号（或财务编号）&quot;,typeof(string));&#xA;dataTable.Columns.Add(&quot;财务编号&quot;,typeof(string));&#xA;dataTable.Columns.Add(&quot;收款银行&quot;,typeof(string));&#xA;dataTable.Columns.Add(&quot;来源&quot;,typeof(string));&#xA;&#xA;foreach(DataRow row in specificDt.Rows){&#xA;&#x9;if(!string.IsNullOrWhiteSpace(row[&quot;到款日期&quot;].ToString())){&#xA;&#x9;&#x9;var tmpDaoKuanDate = Convert.ToDateTime(row[&quot;到款日期&quot;].ToString());&#xA;&#x9;&#x9;if(tmpDaoKuanDate &lt;= endDate &amp;&amp; tmpDaoKuanDate &gt;= startDate &amp;&amp; !string.IsNullOrWhiteSpace(row[&quot;到款银行&quot;].ToString())){&#xA;&#x9;&#x9;&#x9;var tmpRow = dataTable.NewRow();&#xA;&#x9;&#x9;&#x9;tmpRow[0] = row[&quot;公司名称&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[1] = string.IsNullOrWhiteSpace(row[&quot;含税金额&quot;].ToString())?&quot;0&quot;:row[&quot;含税金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[2] = string.IsNullOrWhiteSpace(row[&quot;到款金额&quot;].ToString())?&quot;0&quot;:row[&quot;到款金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[3] = string.IsNullOrWhiteSpace(row[&quot;折扣金额&quot;].ToString())?&quot;0&quot;:row[&quot;折扣金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[4] = string.IsNullOrWhiteSpace(row[&quot;未到款金额&quot;].ToString())?&quot;0&quot;:row[&quot;未到款金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[5] = row[&quot;PO号（或财务编号）&quot;].ToString().Trim('\t').Trim();&#xA;&#x9;&#x9;&#x9;tmpRow[6] = row[&quot;财务编号&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[7] = row[&quot;到款银行&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[8] = &quot;专票&quot;;&#xA;&#x9;&#x9;&#x9;dataTable.Rows.Add(tmpRow);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&#xA;foreach(DataRow row in genericDt.Rows){&#xA;&#x9;if(!string.IsNullOrWhiteSpace(row[&quot;到款日期&quot;].ToString())){&#xA;&#x9;&#x9;var tmpDaoKuanDate = Convert.ToDateTime(row[&quot;到款日期&quot;].ToString());&#xA;&#x9;&#x9;if(tmpDaoKuanDate &lt;= endDate &amp;&amp; tmpDaoKuanDate &gt;= startDate &amp;&amp; !string.IsNullOrWhiteSpace(row[&quot;到款银行&quot;].ToString())){&#xA;&#x9;&#x9;&#x9;var tmpRow = dataTable.NewRow();&#xA;&#x9;&#x9;&#x9;tmpRow[0] = row[&quot;公司名称&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[1] = string.IsNullOrWhiteSpace(row[&quot;含税金额&quot;].ToString())?&quot;0&quot;:row[&quot;含税金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[2] = string.IsNullOrWhiteSpace(row[&quot;到款金额&quot;].ToString())?&quot;0&quot;:row[&quot;到款金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[3] = &quot;0&quot;;&#xA;&#x9;&#x9;&#x9;tmpRow[4] = string.IsNullOrWhiteSpace(row[&quot;未到款金额&quot;].ToString())?&quot;0&quot;:row[&quot;未到款金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[5] = row[&quot;PO号（或财务编号）&quot;].ToString().Trim('\t').Trim();&#xA;&#x9;&#x9;&#x9;tmpRow[6] = row[&quot;财务编号&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[7] = row[&quot;到款银行&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[8] = &quot;普票&quot;;&#xA;&#x9;&#x9;&#x9;dataTable.Rows.Add(tmpRow);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&#xA;foreach(DataRow row in proformaDt.Rows){&#xA;&#x9;if(!string.IsNullOrWhiteSpace(row[&quot;到款日期&quot;].ToString())){&#xA;&#x9;&#x9;var tmpDaoKuanDate = Convert.ToDateTime(row[&quot;到款日期&quot;].ToString());&#xA;&#x9;&#x9;if(tmpDaoKuanDate &lt;= endDate &amp;&amp; tmpDaoKuanDate &gt;= startDate &amp;&amp; !string.IsNullOrWhiteSpace(row[&quot;到款银行&quot;].ToString())){&#xA;&#x9;&#x9;&#x9;var tmpRow = dataTable.NewRow();&#xA;&#x9;&#x9;&#x9;tmpRow[0] = row[&quot;公司名称&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[1] = string.IsNullOrWhiteSpace(row[&quot;含税金额&quot;].ToString())?&quot;0&quot;:row[&quot;含税金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[2] = string.IsNullOrWhiteSpace(row[&quot;到款金额&quot;].ToString())?&quot;0&quot;:row[&quot;到款金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[3] = &quot;0&quot;;&#xA;&#x9;&#x9;&#x9;tmpRow[4] = string.IsNullOrWhiteSpace(row[&quot;未到款金额&quot;].ToString())?&quot;0&quot;:row[&quot;未到款金额&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[5] = row[&quot;PO号（或财务编号）&quot;].ToString().Trim('\t').Trim();&#xA;&#x9;&#x9;&#x9;tmpRow[6] = row[&quot;财务编号&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[7] = row[&quot;到款银行&quot;].ToString();&#xA;&#x9;&#x9;&#x9;tmpRow[8] = &quot;形式发票&quot;;&#xA;&#x9;&#x9;&#x9;dataTable.Rows.Add(tmpRow);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" DisplayName="合并三张sheet,并按照时间筛选" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="specificDt">
          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">specificDt</mca:CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="genericDt">
          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">genericDt</mca:CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="proformaDt">
          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">proformaDt</mca:CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="dataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">dataTable</mca:CSharpReference>
        </OutArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="startDate">
          <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">startDate</mca:CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="endDate">
          <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">endDate</mca:CSharpValue>
        </InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>